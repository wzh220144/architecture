JMP 0 0 START










A:022
STRING1
I
n
p
u
t
032
2
0
032
n
u
m
b
e
r
s
032
h
e
r
e
:

B:021
STRING2
I
n
p
u
t
032
1
032
n
u
m
b
e
r
032
h
e
r
e
:

START: LDR 0 1 0 A		/*********PRINT STRING A*******************/
STR 0 1 0 1		//STORE STRING1'S LEN IN ADDRESS[1]
LDR 0 1 0 A+1
STR 0 1 0 2		//STORE STRING1'S ADDRESS IN ADDRESS[1]
LDR 0 1 0 0
SMR 0 1 0 0		//CLEAR R[1]
AIR 1 C
STR 0 1 0 3		//STORE RETURN ADDRESS
JMP 0 0 D		//PRINT STRING

C: LDR 0 1 0 0			/*****************INPUT 20 NUMBER*******************/
SMR 0 1 0 0
AIR 1 20		//INIT R[1]=20
H: JZ 0 1 0 E		//IF R[1]==0, BREAK LOOP
STR 0 1 0 1		//STORE COUNTER TO ADDRESS[1]
LDR 0 0 0 0
SMR 0 0 0 0		//R[0]=0
AIR 0 F			//R[0]=RETURN ADDRESS
STR 0 0 0 2		//SOTRE R[0] IN ADDRESS[2]
JMP 0 0 G		//INPUT NUMBER
F: LDR 0 2 0 2
SMR 0 2 0 2
AIR 2 DATA1		//R[2]=DATA1
AMR 0 2 0 1		//R[2]=DATA1+COUNTER
STR 0 2 0 2		//DATA1+COUNTER->ADDRESS[2]
STR 1 0 0 2		//STORE R[0]  --> DATA1+COUNTER
LDR 0 1 0 1		//R[1]<---COUNTER
SIR 1 1
JMP 0 0 H

E:LDR 0 1 0 B		/******************PRINT STRING B*******************/
STR 0 1 0 1		//STORE STRING1'S LEN IN ADDRESS[1]
LDR 0 1 0 B+1
STR 0 1 0 2		//STORE STRING1'S ADDRESS IN ADDRESS[1]
LDR 0 1 0 0
SMR 0 1 0 0		//CLEAR R[1]
AIR 1 I
STR 0 1 0 3		//STORE RETURN ADDRESS
JMP 0 0 D		//PRINT STRING

I:LDR 0 0 0 0		/**************INPUT 1 NUMBER**********************/
SMR 0 0 0 0		//R[0]=0
AIR 0 J			//R[0]=RETURN ADDRESS
STR 0 0 0 2		//SOTRE R[0] IN ADDRESS[2]
JMP 0 0 G		//INPUT NUMBER

J:

/****PRINT STRING****PARAMETER: 1(LEN) 2(ADDRESS) 3(RETURN ADDRESS)***REGISTER:0 1 2*/
D: LDR 0 1 0 1		//LEN -> R[1]
LDR 0 2 0 2			//ADDRESS -> R[2]
LABEL1:JZ 0 1 0 LABEL0		//IF R[1]==0, JMP
SIR 1 1		//LEN-- -> R[1]
STR 0 2 0 4		//ADDRESS -> 4
LDR 1 0 0 4		//[[4]]->R[0]
OUT 0 1		//PRINT R[0]
AIR 2 1		//ADDRESS++ -> R[2]
JMP 0 0 LABEL1		//LOOP
LABEL0: JMP 1 0 3		//RETURN

/****INPUT NUMBER*****PARAMETER: 2(RETURN ADDRESS)***REGISTER: 0 1 2 3/
G: LDR 0 0 0 0
SMR 0 0 0 0		//R[0]=0
LABEL2:IN 3 0		//R[3]<--CHAR
LDR 0 2 0 0
SMR 0 2 0 0
AIR 2 32	//R[2]=' '
TRR 2 3
JCC 0 3 0 LABEL1
LDR 0 2 0 0
SMR 0 2 0 0
AIR 2 10	//R[2]='\n'
TRR 2 3
JCC 0 3 0 LABEL1
LDR 0 2 0 0
SMR 0 2 0 0
AIR 2 47		//R[2]='0'
STR 0 3 0 3
SMR 0 2 0 3		//R[2]=R[2]-R[3]
JGE 0 2 0 LABEL_NUMBER_ERROR
LDR 0 2 0 3		//R[2]=R[3]
SIR 2 58
JGE 0 2 0 LABEL_NUMBER_ERROR
LDR 0 2 0 0
SMR 0 2 0 0
AIR 2 10		//R[2]=10
SIR 3 48		//R[3]=R[3]-'0'
MLT 0 2		//10*R[0]=RES-->R[1]
STR 0 1 0 3
AMR 0 3 0 3		//R[3]=R[1]+R[3]
STR 0 3 0 3
LDR 0 0 0 3		//R[0]<---R[3]
JMP 0 0 LABEL2
LABEL1: JMP 1 0 2
DATA2:17
STRING3
I
n
p
u
t
032
e
r
r
o
r
!
!
!

LABEL_NUMBER_ERROR: LDR 0 1 0 DATA2		/******************PRINT STRING DATA2*******************/
STR 0 1 0 1		//STORE STRING1'S LEN IN ADDRESS[1]
LDR 0 1 0 DATA2+1
STR 0 1 0 2		//STORE STRING1'S ADDRESS IN ADDRESS[1]
LDR 0 1 0 0
SMR 0 1 0 0		//CLEAR R[1]
AIR 1 END
STR 0 1 0 3		//STORE RETURN ADDRESS
JMP 0 0 D		//PRINT STRING
/****************************COMPARE*********************************************************/
STR 0 0 0 3		//[3]<--COMPARE NUMBER
LDR 0 1 0 1
SMR 0 1 0 1		//R[1]=0
AIR 1 19		//R[1]=COUNTER
LDR 0 2 0 1
SMR 0 2 0 1		//R[2]=0
AIR 2 190		//R[2]=ADDRESS
STR 0 2 0 1		//[1]<--ADDRESS
LDR 1 3 0 1		//R[3]=DATA[20]
LDR 1 2 0 1		//R[2]=DATA[20]
SMR 0 2 0 3		//R[2]=R[2]-COMPARE NUMBER
JCC 0 1 0 LABEL2	//IF R[2]<0
JMP 0 0 LABEL3
LABEL2: STR 0 2 0 4
SMR 0 2 0 4
SMR 0 2 0 4		//R[2]=-R[2]
LABEL3: STR 0 2 0 2		//R[2]->[2]
LABEL4:JZ 0 1 0 LABEL1
LDR 0 2 0 1		//R[2]=ADDRESS
SIR 2 1			//R[2]--
STR 0 2 0 1		//[1]<--ADDRESS
SIR 1 1			//COUNTER-- --> R[1]
LDR 1 2 0 1		//R[2]=DATA[I]
SMR 0 2 0 3		//R[2]=R[2]-COMPARENUMBER
JCC 0 1 0 LABEL 5		//IF R[2]<0
JMP 0 0 LABEL6
LABEL5: STR 0 2 0 4
SMR 0 2 0 4
SMR 0 2 0 4		//R[2]=-R[2]
LABEL6: STR 0 2 0 5
LDR 0 0 0 5		//R[0]=R[2]
SMR 0 0 0 2		//R[0]=R[0]-[2](TEMP)
JCC 0 1 0 LABEL7		//IF R[0]<TEMP
JMP 0 0 LABEL8
LABEL7: STR 0 2 0 2
LDR 1 3 0 1		//STORE RESULT IN R[3]
LABEL8: JMP 0 0 LABEL4
LABEL1:
/*************************************PRINT RESULT************************************************/
LDR 0 1 0 DATA3		/******************PRINT STRING DATA3*******************/
STR 0 1 0 1		//STORE STRING1'S LEN IN ADDRESS[1]
LDR 0 1 0 DATA3+1
STR 0 1 0 2		//STORE STRING1'S ADDRESS IN ADDRESS[1]
LDR 0 1 0 0
SMR 0 1 0 0		//CLEAR R[1]
AIR 1 LABEL1
STR 0 1 0 3		//STORE RETURN ADDRESS
JMP 0 0 D		//PRINT STRING
DATA3:023
231
T
h
e
032
c
l
o
s
e
s
t
032
n
u
m
b
e
r
032
i
s
:
032
/*********PRINT NUMBER***********/
STR 0 3 0 1
LDR 0 0 0 1		//R[0]=RES
LDR 0 2 0 2
SMR 0 2 0 2		//R[2]=0;
AIR 2 10		//R[2]=10
LDR 0 3 0 2
SMR 0 3 0 2		//R[3]=0
AIR 3 190		//TEMP DATA
STR 0 3 0 1		//[1]<--R[3]
LDR 0 3 0 2
SMR 0 3 0 2		//R[3]=0
STR 0 3 0 2		//[2]<--COUNTER
LABEL1: DVD 0 2		//R[0]=RES/10 R[1]=RES%10
STR 1 1 0 1		//REMAINDER  -->  TEMP
LDR 0 1 0 1
SIR 1 1
STR 0 1 0 1		//TEMP ADDRESS --
LDR 0 1 0 2
AIR 1 1
STR 0 1 0 2		//COUNTER++
LDR 0 1 0 3
SMR 0 1 0 3		//R[0]=0
AIR 1 255
AIR 1 LABEL2	//R[0]=LABEL2
STR 0 1 0 3		//[3]<--LABEL2
JZ 1 0 0 3		//JMP LABEL2 IF R[0]==0
LDR 0 1 0 4
SMR 0 1 0 4		//R[1]=0
AIR 1 255
AIR 1 LABEL1	//R[1]=LABEL1
STR 0 1 0 4		//[4]<--LABEL1
JMP 1 0 4		//JMP LABEL1
LABEL2: LDR 0 1 0 1
AIR 1 1
STR 0 1 0 1		//[1]++
LDR 1 1 0 1		//TEMP[COUNTER]-->R[1]
AIR 1 48
OUT  1 1		//PRINT TEMP
LDR 0 1 0 2
SIR 1 1
STR 0 1 0 2		//[2]--
LDR 0 0 0 4
SMR 0 0 0 4		//R[0]=0
AIR 0 255
AIR 0 LABEL3	//R[0]=LABEL3
STR 0 0 0 4		//[4]<---LABEL3
JZ 1 1 0 4
JMP 1 0 3		//JMP LABEL2
LABEL3:LDR 0 0 0 0
SMR 0 0 0 0
AIR 0 10
OUT 0 1		//PRINT '\n'
END:














